name: Detailed Debug Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Show environment
      run: |
        echo "=== Environment Info ==="
        node --version
        npm --version
        pwd
        echo "=== File Structure ==="
        ls -la
        echo "=== Package.json ==="
        cat package.json
        
    - name: Install dependencies with verbose output
      run: npm install --verbose
      
    - name: Show installed packages
      run: |
        echo "=== Installed Packages ==="
        npm list --depth=0
        echo "=== TypeScript Info ==="
        npx tsc --version
        echo "=== Next.js Info ==="
        npx next --version
        
    - name: Generate Prisma Client with detailed output
      run: |
        echo "=== Prisma Generate ==="
        npx prisma generate --schema=./prisma/schema.prisma
      env:
        DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
        
    - name: TypeScript compile check
      run: |
        echo "=== TypeScript Compile Check ==="
        npx tsc --noEmit --listFiles | head -20
        echo "=== TypeScript Config ==="
        cat tsconfig.json
      continue-on-error: true
      
    - name: Next.js build with maximum verbosity
      run: |
        echo "=== Starting Next.js Build ==="
        export DEBUG=*
        npx next build --debug
      env:
        NODE_ENV: production
        DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
        NEXTAUTH_URL: "http://localhost:3000"
        NEXTAUTH_SECRET: "build-test-secret"
        JWT_SECRET: "build-test-jwt-secret"
        PAYPAY_API_KEY: "dummy"
        PAYPAY_API_SECRET: "dummy"
        PAYPAY_MERCHANT_ID: "dummy"
      continue-on-error: true
      
    - name: Show build artifacts
      run: |
        echo "=== Build Results ==="
        if [ -d ".next" ]; then
          echo "Next.js build directory exists"
          ls -la .next/
          if [ -f ".next/build-manifest.json" ]; then
            echo "Build manifest exists"
          else
            echo "Build manifest missing"
          fi
        else
          echo "No .next directory found"
        fi
        
    - name: Show any error logs
      run: |
        echo "=== Error Investigation ==="
        find . -name "*.log" -type f | head -5 | xargs cat 2>/dev/null || echo "No log files found"
        if [ -f ".next/trace" ]; then
          echo "=== Build Trace ==="
          cat .next/trace | tail -50
        fi